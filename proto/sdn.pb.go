// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.1
// 	protoc        v3.12.4
// source: proto/sdn.proto

package sdn

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Flow Add Messages
type FlowAddRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SwitchId      uint64                 `protobuf:"varint,1,opt,name=switch_id,json=switchId,proto3" json:"switch_id,omitempty"`
	InPort        uint32                 `protobuf:"varint,2,opt,name=in_port,json=inPort,proto3" json:"in_port,omitempty"`
	Src           string                 `protobuf:"bytes,3,opt,name=src,proto3" json:"src,omitempty"`
	Dst           string                 `protobuf:"bytes,4,opt,name=dst,proto3" json:"dst,omitempty"`
	OutPort       uint32                 `protobuf:"varint,5,opt,name=out_port,json=outPort,proto3" json:"out_port,omitempty"`
	Priority      uint32                 `protobuf:"varint,6,opt,name=priority,proto3" json:"priority,omitempty"`
	HardTimeout   uint32                 `protobuf:"varint,7,opt,name=hard_timeout,json=hardTimeout,proto3" json:"hard_timeout,omitempty"`
	IdleTimeout   uint32                 `protobuf:"varint,8,opt,name=idle_timeout,json=idleTimeout,proto3" json:"idle_timeout,omitempty"`
	BufferId      uint32                 `protobuf:"varint,9,opt,name=buffer_id,json=bufferId,proto3" json:"buffer_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FlowAddRequest) Reset() {
	*x = FlowAddRequest{}
	mi := &file_proto_sdn_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FlowAddRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FlowAddRequest) ProtoMessage() {}

func (x *FlowAddRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sdn_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FlowAddRequest.ProtoReflect.Descriptor instead.
func (*FlowAddRequest) Descriptor() ([]byte, []int) {
	return file_proto_sdn_proto_rawDescGZIP(), []int{0}
}

func (x *FlowAddRequest) GetSwitchId() uint64 {
	if x != nil {
		return x.SwitchId
	}
	return 0
}

func (x *FlowAddRequest) GetInPort() uint32 {
	if x != nil {
		return x.InPort
	}
	return 0
}

func (x *FlowAddRequest) GetSrc() string {
	if x != nil {
		return x.Src
	}
	return ""
}

func (x *FlowAddRequest) GetDst() string {
	if x != nil {
		return x.Dst
	}
	return ""
}

func (x *FlowAddRequest) GetOutPort() uint32 {
	if x != nil {
		return x.OutPort
	}
	return 0
}

func (x *FlowAddRequest) GetPriority() uint32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

func (x *FlowAddRequest) GetHardTimeout() uint32 {
	if x != nil {
		return x.HardTimeout
	}
	return 0
}

func (x *FlowAddRequest) GetIdleTimeout() uint32 {
	if x != nil {
		return x.IdleTimeout
	}
	return 0
}

func (x *FlowAddRequest) GetBufferId() uint32 {
	if x != nil {
		return x.BufferId
	}
	return 0
}

type FlowAddResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FlowAddResponse) Reset() {
	*x = FlowAddResponse{}
	mi := &file_proto_sdn_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FlowAddResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FlowAddResponse) ProtoMessage() {}

func (x *FlowAddResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sdn_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FlowAddResponse.ProtoReflect.Descriptor instead.
func (*FlowAddResponse) Descriptor() ([]byte, []int) {
	return file_proto_sdn_proto_rawDescGZIP(), []int{1}
}

func (x *FlowAddResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *FlowAddResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// Packet Out Messages
type PacketOutRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SwitchId      uint64                 `protobuf:"varint,1,opt,name=switch_id,json=switchId,proto3" json:"switch_id,omitempty"`
	InPort        uint32                 `protobuf:"varint,2,opt,name=in_port,json=inPort,proto3" json:"in_port,omitempty"`
	OutPort       uint32                 `protobuf:"varint,3,opt,name=out_port,json=outPort,proto3" json:"out_port,omitempty"`
	Data          string                 `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"` // Base64 encoded
	BufferId      uint32                 `protobuf:"varint,5,opt,name=buffer_id,json=bufferId,proto3" json:"buffer_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PacketOutRequest) Reset() {
	*x = PacketOutRequest{}
	mi := &file_proto_sdn_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PacketOutRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PacketOutRequest) ProtoMessage() {}

func (x *PacketOutRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sdn_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PacketOutRequest.ProtoReflect.Descriptor instead.
func (*PacketOutRequest) Descriptor() ([]byte, []int) {
	return file_proto_sdn_proto_rawDescGZIP(), []int{2}
}

func (x *PacketOutRequest) GetSwitchId() uint64 {
	if x != nil {
		return x.SwitchId
	}
	return 0
}

func (x *PacketOutRequest) GetInPort() uint32 {
	if x != nil {
		return x.InPort
	}
	return 0
}

func (x *PacketOutRequest) GetOutPort() uint32 {
	if x != nil {
		return x.OutPort
	}
	return 0
}

func (x *PacketOutRequest) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

func (x *PacketOutRequest) GetBufferId() uint32 {
	if x != nil {
		return x.BufferId
	}
	return 0
}

type PacketOutResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PacketOutResponse) Reset() {
	*x = PacketOutResponse{}
	mi := &file_proto_sdn_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PacketOutResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PacketOutResponse) ProtoMessage() {}

func (x *PacketOutResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sdn_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PacketOutResponse.ProtoReflect.Descriptor instead.
func (*PacketOutResponse) Descriptor() ([]byte, []int) {
	return file_proto_sdn_proto_rawDescGZIP(), []int{3}
}

func (x *PacketOutResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *PacketOutResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// Packet In Messages
type PacketInRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BufferId      uint32                 `protobuf:"varint,1,opt,name=buffer_id,json=bufferId,proto3" json:"buffer_id,omitempty"`
	Length        uint32                 `protobuf:"varint,2,opt,name=length,proto3" json:"length,omitempty"`
	Reason        uint32                 `protobuf:"varint,3,opt,name=reason,proto3" json:"reason,omitempty"`
	TableId       uint32                 `protobuf:"varint,4,opt,name=table_id,json=tableId,proto3" json:"table_id,omitempty"`
	Cookie        uint64                 `protobuf:"varint,5,opt,name=cookie,proto3" json:"cookie,omitempty"`
	Match         *Match                 `protobuf:"bytes,6,opt,name=match,proto3" json:"match,omitempty"`
	Data          string                 `protobuf:"bytes,7,opt,name=data,proto3" json:"data,omitempty"` // Base64 encoded
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PacketInRequest) Reset() {
	*x = PacketInRequest{}
	mi := &file_proto_sdn_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PacketInRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PacketInRequest) ProtoMessage() {}

func (x *PacketInRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sdn_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PacketInRequest.ProtoReflect.Descriptor instead.
func (*PacketInRequest) Descriptor() ([]byte, []int) {
	return file_proto_sdn_proto_rawDescGZIP(), []int{4}
}

func (x *PacketInRequest) GetBufferId() uint32 {
	if x != nil {
		return x.BufferId
	}
	return 0
}

func (x *PacketInRequest) GetLength() uint32 {
	if x != nil {
		return x.Length
	}
	return 0
}

func (x *PacketInRequest) GetReason() uint32 {
	if x != nil {
		return x.Reason
	}
	return 0
}

func (x *PacketInRequest) GetTableId() uint32 {
	if x != nil {
		return x.TableId
	}
	return 0
}

func (x *PacketInRequest) GetCookie() uint64 {
	if x != nil {
		return x.Cookie
	}
	return 0
}

func (x *PacketInRequest) GetMatch() *Match {
	if x != nil {
		return x.Match
	}
	return nil
}

func (x *PacketInRequest) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

type Match struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          uint32                 `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`
	Fields        []*MatchField          `protobuf:"bytes,2,rep,name=fields,proto3" json:"fields,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Match) Reset() {
	*x = Match{}
	mi := &file_proto_sdn_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Match) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Match) ProtoMessage() {}

func (x *Match) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sdn_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Match.ProtoReflect.Descriptor instead.
func (*Match) Descriptor() ([]byte, []int) {
	return file_proto_sdn_proto_rawDescGZIP(), []int{5}
}

func (x *Match) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *Match) GetFields() []*MatchField {
	if x != nil {
		return x.Fields
	}
	return nil
}

type MatchField struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Class         uint32                 `protobuf:"varint,1,opt,name=class,proto3" json:"class,omitempty"`
	Type          uint32                 `protobuf:"varint,2,opt,name=type,proto3" json:"type,omitempty"`
	Value         string                 `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"` // Base64 encoded
	Mask          string                 `protobuf:"bytes,4,opt,name=mask,proto3" json:"mask,omitempty"`   // Optional
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MatchField) Reset() {
	*x = MatchField{}
	mi := &file_proto_sdn_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MatchField) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchField) ProtoMessage() {}

func (x *MatchField) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sdn_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchField.ProtoReflect.Descriptor instead.
func (*MatchField) Descriptor() ([]byte, []int) {
	return file_proto_sdn_proto_rawDescGZIP(), []int{6}
}

func (x *MatchField) GetClass() uint32 {
	if x != nil {
		return x.Class
	}
	return 0
}

func (x *MatchField) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *MatchField) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *MatchField) GetMask() string {
	if x != nil {
		return x.Mask
	}
	return ""
}

type PacketInResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PacketInResponse) Reset() {
	*x = PacketInResponse{}
	mi := &file_proto_sdn_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PacketInResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PacketInResponse) ProtoMessage() {}

func (x *PacketInResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sdn_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PacketInResponse.ProtoReflect.Descriptor instead.
func (*PacketInResponse) Descriptor() ([]byte, []int) {
	return file_proto_sdn_proto_rawDescGZIP(), []int{7}
}

func (x *PacketInResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *PacketInResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_proto_sdn_proto protoreflect.FileDescriptor

var file_proto_sdn_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x64, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x03, 0x73, 0x64, 0x6e, 0x22, 0x84, 0x02, 0x0a, 0x0e, 0x46, 0x6c, 0x6f, 0x77, 0x41,
	0x64, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x77, 0x69,
	0x74, 0x63, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x73, 0x77,
	0x69, 0x74, 0x63, 0x68, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x6e, 0x5f, 0x70, 0x6f, 0x72,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x69, 0x6e, 0x50, 0x6f, 0x72, 0x74, 0x12,
	0x10, 0x0a, 0x03, 0x73, 0x72, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x72,
	0x63, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x64, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x75, 0x74, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x6f, 0x75, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x1a,
	0x0a, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x68, 0x61,
	0x72, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0b, 0x68, 0x61, 0x72, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x21, 0x0a,
	0x0c, 0x69, 0x64, 0x6c, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0b, 0x69, 0x64, 0x6c, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74,
	0x12, 0x1b, 0x0a, 0x09, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x08, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x49, 0x64, 0x22, 0x45, 0x0a,
	0x0f, 0x46, 0x6c, 0x6f, 0x77, 0x41, 0x64, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x22, 0x94, 0x01, 0x0a, 0x10, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x4f,
	0x75, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x77, 0x69,
	0x74, 0x63, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x73, 0x77,
	0x69, 0x74, 0x63, 0x68, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x6e, 0x5f, 0x70, 0x6f, 0x72,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x69, 0x6e, 0x50, 0x6f, 0x72, 0x74, 0x12,
	0x19, 0x0a, 0x08, 0x6f, 0x75, 0x74, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x07, 0x6f, 0x75, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1b,
	0x0a, 0x09, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x08, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x49, 0x64, 0x22, 0x47, 0x0a, 0x11, 0x50,
	0x61, 0x63, 0x6b, 0x65, 0x74, 0x4f, 0x75, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x22, 0xc7, 0x01, 0x0a, 0x0f, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x49,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x75, 0x66, 0x66,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x62, 0x75, 0x66,
	0x66, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x16, 0x0a,
	0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x72,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x06, 0x63, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x12, 0x20, 0x0a, 0x05, 0x6d, 0x61, 0x74, 0x63,
	0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x73, 0x64, 0x6e, 0x2e, 0x4d, 0x61,
	0x74, 0x63, 0x68, 0x52, 0x05, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x44,
	0x0a, 0x05, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x27, 0x0a, 0x06, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x64,
	0x6e, 0x2e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x06, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x73, 0x22, 0x60, 0x0a, 0x0a, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x05, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x61, 0x73, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6d, 0x61, 0x73, 0x6b, 0x22, 0x46, 0x0a, 0x10, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74,
	0x49, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x32, 0x89,
	0x01, 0x0a, 0x0d, 0x46, 0x6c, 0x6f, 0x77, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x36, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x46, 0x6c, 0x6f, 0x77, 0x12, 0x13, 0x2e, 0x73, 0x64,
	0x6e, 0x2e, 0x46, 0x6c, 0x6f, 0x77, 0x41, 0x64, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x14, 0x2e, 0x73, 0x64, 0x6e, 0x2e, 0x46, 0x6c, 0x6f, 0x77, 0x41, 0x64, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x40, 0x0a, 0x0d, 0x53, 0x65, 0x6e, 0x64,
	0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x4f, 0x75, 0x74, 0x12, 0x15, 0x2e, 0x73, 0x64, 0x6e, 0x2e,
	0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x4f, 0x75, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x16, 0x2e, 0x73, 0x64, 0x6e, 0x2e, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x4f, 0x75, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x32, 0x50, 0x0a, 0x0d, 0x50, 0x61,
	0x63, 0x6b, 0x65, 0x74, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x12, 0x3f, 0x0a, 0x0e, 0x48,
	0x61, 0x6e, 0x64, 0x6c, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x6e, 0x12, 0x14, 0x2e,
	0x73, 0x64, 0x6e, 0x2e, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x73, 0x64, 0x6e, 0x2e, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74,
	0x49, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x0b, 0x5a, 0x09,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x64, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_proto_sdn_proto_rawDescOnce sync.Once
	file_proto_sdn_proto_rawDescData = file_proto_sdn_proto_rawDesc
)

func file_proto_sdn_proto_rawDescGZIP() []byte {
	file_proto_sdn_proto_rawDescOnce.Do(func() {
		file_proto_sdn_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_sdn_proto_rawDescData)
	})
	return file_proto_sdn_proto_rawDescData
}

var file_proto_sdn_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_proto_sdn_proto_goTypes = []any{
	(*FlowAddRequest)(nil),    // 0: sdn.FlowAddRequest
	(*FlowAddResponse)(nil),   // 1: sdn.FlowAddResponse
	(*PacketOutRequest)(nil),  // 2: sdn.PacketOutRequest
	(*PacketOutResponse)(nil), // 3: sdn.PacketOutResponse
	(*PacketInRequest)(nil),   // 4: sdn.PacketInRequest
	(*Match)(nil),             // 5: sdn.Match
	(*MatchField)(nil),        // 6: sdn.MatchField
	(*PacketInResponse)(nil),  // 7: sdn.PacketInResponse
}
var file_proto_sdn_proto_depIdxs = []int32{
	5, // 0: sdn.PacketInRequest.match:type_name -> sdn.Match
	6, // 1: sdn.Match.fields:type_name -> sdn.MatchField
	0, // 2: sdn.FlowOperation.AddFlow:input_type -> sdn.FlowAddRequest
	2, // 3: sdn.FlowOperation.SendPacketOut:input_type -> sdn.PacketOutRequest
	4, // 4: sdn.PacketHandler.HandlePacketIn:input_type -> sdn.PacketInRequest
	1, // 5: sdn.FlowOperation.AddFlow:output_type -> sdn.FlowAddResponse
	3, // 6: sdn.FlowOperation.SendPacketOut:output_type -> sdn.PacketOutResponse
	7, // 7: sdn.PacketHandler.HandlePacketIn:output_type -> sdn.PacketInResponse
	5, // [5:8] is the sub-list for method output_type
	2, // [2:5] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_proto_sdn_proto_init() }
func file_proto_sdn_proto_init() {
	if File_proto_sdn_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_sdn_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_proto_sdn_proto_goTypes,
		DependencyIndexes: file_proto_sdn_proto_depIdxs,
		MessageInfos:      file_proto_sdn_proto_msgTypes,
	}.Build()
	File_proto_sdn_proto = out.File
	file_proto_sdn_proto_rawDesc = nil
	file_proto_sdn_proto_goTypes = nil
	file_proto_sdn_proto_depIdxs = nil
}
